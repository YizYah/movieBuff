{"version":3,"file":"/home/yisroel/projects/movieBuff/filmInfo.ts","sources":["/home/yisroel/projects/movieBuff/filmInfo.ts"],"names":[],"mappings":";;;AACA,2CAAsC;AAG/B,KAAK,UAAU,QAAQ,CAAC,KAAa,EAAE,OAAgB;IAE1D,IAAI,WAAW,GAAQ,EAAC,OAAO,EAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAC,CAAA;IAC5C,IAAI;QACA,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,GAAG,CAC5B,qBAAS,EACT;YACI,KAAK;SACR,CAAC,CAAA;QAEN,MAAM,eAAe,GACjB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,UAAU,CAAA;QAEzC,WAAW,GAAG;YACV,OAAO,EAAE,eAAe,CAAC,OAAO;YAChC,IAAI,EAAE,eAAe,CAAC,QAAQ,CAAC,GAAG;SACrC,CAAA;KAEJ;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,KAAK,CAAC,IAAI,KAAG,WAAW,EAAE;YAC1B,OAAO,WAAW,CAAA;SACrB;QACD,MAAM,IAAI,KAAK,CAAC,4BAA4B,KAAK,EAAE,CAAC,CAAA;KACvD;IAED,OAAO,WAAW,CAAA;AACtB,CAAC;AA1BD,4BA0BC","sourcesContent":["import {Session} from \"neo4j-driver\";\nimport {filmQuery} from \"./filmQuery\";\nimport {FilmFacts} from \"./FilmFacts\";\n\nexport async function filmInfo(title: string, session: Session):\n    Promise<FilmFacts> {\n    let returnValue: any = {tagline:'', year: 0}\n    try {\n        const result = await session.run(\n            filmQuery,\n            {\n                title,\n            })\n\n        const movieProperties =\n            result.records[0].get('m').properties\n\n        returnValue = {\n            tagline: movieProperties.tagline,\n            year: movieProperties.released.low\n        }\n\n    } catch (error) {\n        if (error.name==='TypeError') {\n            return returnValue\n        }\n        throw new Error(`error getting film info: ${error}`)\n    }\n\n    return returnValue\n}\n"]}